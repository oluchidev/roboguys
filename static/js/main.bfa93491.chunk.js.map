{"version":3,"sources":["reportWebVitals.js","Components/card.js","Components/cardlist.js","Components/searchBox.js","Components/scroll.js","Components/ErrorBoundry.js","Container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","card","name","email","id","react_default","a","createElement","className","alt","src","concat","cardlist","robots","map","user","i","src_Components_card","key","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","setState","Component","App","onSearchChange","event","searchfield","target","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","searchBox","Components_scroll","Components_ErrorBoundry","Components_cardlist","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_Container_App"],"mappings":"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","file":"static/js/main.bfa93491.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport './card.css'\r\n\r\nconst card = ({name, email, id}) => {\r\n    return (\r\n            <div className=\" tc bg-light-green br3 ma3 pa3 grow bw3 shadow-5\">\r\n            <img alt='robots' src={`https://robohash.org/${id}?100*100`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default card;","import React from 'react';\r\nimport Card from './card'\r\n\r\nconst cardlist = ({robots}) => {\r\n  \r\n    return (\r\n        <div className=\"carddiv\">\r\n     {robots.map((user,i) =>\r\n      {\r\n         return   <Card  key={i} \r\n             id={robots[i].id} \r\n             name={robots[i].name}\r\n              email={robots[i].email} />\r\n    \r\n        }\r\n      )\r\n    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n return (\r\n    <div className=\"pa2\">\r\n    <input\r\n    className=\"pa3 ba b--green bg-lightest-blue\"\r\n     type='search' \r\n     placeholder=\"search robots\"\r\n     onChange={searchChange}\r\n     />\r\n    </div>\r\n );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\nreturn (\r\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nexport default Scroll;","import { truncate } from \"lodash\";\r\nimport React, {Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\nif(this.state.hasError){\r\n    return <h1>oooops. this is not good</h1>\r\n}  return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport Cardlist from '../Components/cardlist';\r\nimport SearchBox from '../Components/searchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state ={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n           \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length? \r\n            <h1>Loading</h1> :\r\n        \r\n             (\r\n                <div className='tc'>\r\n                <h1 className='f1'>ROBOGUYS</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                <Cardlist robots={filteredRobots}/> \r\n                </ErrorBoundry>\r\n                </Scroll>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport default App;","import React  from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './Container/App';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n  <App/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}